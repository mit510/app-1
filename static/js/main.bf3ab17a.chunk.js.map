{"version":3,"sources":["components/Navbar.js","components/Form.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","style","height","width","cursor","onClick","changeColor","role","toggleMode","htmlFor","Form","useState","text","setText","color","heading","rows","value","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","split","length","Alert","alert","word","lower","charAt","slice","capital","msg","App","setMode","setAlert","message","setTimeout","document","body","cls","classList","remove","add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.bf3ab17a.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n  return (\r\n          <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link\" to=\"about\">About Us</Link> */}\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">Contact Us</a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"bg-primary rounded-5 mx-2\" style={{height:'20px',width:'20px',cursor:'pointer'}} onClick={()=>{props.changeColor('primary')}}></div>\r\n      <div className=\"bg-warning rounded-5 mx-2\" style={{height:'20px',width:'20px',cursor:'pointer'}} onClick={()=>{props.changeColor('warning')}}></div>\r\n      <div className=\"bg-success rounded-5 mx-2\" style={{height:'20px',width:'20px',cursor:'pointer'}} onClick={()=>{props.changeColor('success')}}></div>\r\n      <div className=\"bg-danger rounded-5 mx-2\" style={{height:'20px',width:'20px',cursor:'pointer'}} onClick={()=>{props.changeColor('danger')}}></div>\r\n      <div className={`form-check form-switch text-${props.mode==='light' ? 'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    \r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nexport default function Form(props) {\r\n    const handleUpClick = ()=>{\r\n     let newText = text.toUpperCase();\r\n     setText(newText);\r\n     props.showAlert(\"Converted to Uppercase\",\"success\");\r\n    }\r\n    const handleDownClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText); \r\n        props.showAlert(\"Converted to Lowercase\",\"success\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n\r\n    }\r\n    const cleartext=()=>{\r\n      let newText = '';\r\n      setText(newText)\r\n      props.showAlert(\"Text is Clear\",\"success\")\r\n    }\r\n    const [text, setText] = useState('');\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" id=\"myBox\" \r\n        rows=\"8\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'black':'white' , color:props.mode==='dark'?'white':'black'}}> \r\n        </textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick= \r\n        {handleUpClick}>Covert to \r\n         Upper</button>\r\n         <button className=\"btn btn-primary mx-3\" onClick= \r\n          {handleDownClick}>Covert to \r\n         lower</button>\r\n         <button className=\"btn btn-primary\" onClick= \r\n          {cleartext}>Clear</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>Words: {text.split(\" \").length} <br/> Characters: {text.length} <br/> Minimum time for reading :{0.008*text.split(\" \").length}</p>\r\n    </div>\r\n    </>\r\n     \r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capital = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show `}role=\"alert\">\r\n    <strong>{capital(props.alert.type)}</strong>  {props.alert.msg} \r\n    {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n  </div>\r\n  )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\n// import About from './components/About';\nimport Form from './components/Form';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\nimport React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n// let name = \"Mit\"\nfunction App() {\n  const [mode,setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert =(message,type) =>{\n      setAlert({\n        msg:message,\n        type:type\n      }) \n      setTimeout(()=>{\n          setAlert(null);\n      },2000);\n  }\n  const toggleMode= ()=>{\n  if(mode==='light'){\n    setMode('dark');\n    document.body.style.backgroundColor='black';\n    showAlert(\" Dark mode has been enabled\",\"success\");\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor='white';\n    showAlert(\" Light mode has been enabled\",\"success\");\n  }\n  }\n  const removecolor=()=>{\n    document.body.classList.remove('bg-light')\n    document.body.classList.remove('bg-dark')\n    document.body.classList.remove('bg-danger')\n    document.body.classList.remove('bg-primary')\n    document.body.classList.remove('bg-success')\n    document.body.classList.remove('bg-warning')\n  }\n  const changeColor = (cls)=>{\n    removecolor();\n   document.body.classList.add('bg-'+cls)\n  }\n  return (\n   <>\n  {/* <Router> */}\n\n    <Navbar title=\"MIT\" mode={mode} toggleMode={toggleMode} changeColor={changeColor}/>\n    <Alert alert={alert} />\n    <div className=\"container my-3\">\n    {/* <Routes> */}\n          {/* <Route path=\"/about\" element={<About />} /> */}\n          {/* <Route path=\"/\" element={<Form showAlert={showAlert} heading=\"Enter the Text to analyze\"  mode={mode}/>} /> */}\n          <Form showAlert={showAlert} heading=\"Enter the Text to analyze\"  mode={mode}/>\n    {/* </Routes> */}\n    </div>\n  {/* </Router> */}\n\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}